spring:
  activiti:
##    database-schema: activiti
    database-schema-update: true
    history-level: full
    db-history-used: true
    job-executor-activate: true # asyncExecutorEnabled属性设置设置true后将代替那些老的Job executor
    check-process-definitions: false # 自动部署验证设置:true-开启（默认）、false-关闭

  security:
    basic:
      enabled: false
#    user:
#      name: user
#      password: 123456

  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.16.222:3306/activiti
    username: root
    password: root

#    hikari:
#      data-source-properties:
#        useSSL: false
#        serverTimezone: GMT+8
#        useUnicode: true
#        characterEncoding: utf8
#        nullCatalogMeansCurrent: true  #这个必须要加，否则 Activiti 自动建表会失败
    druid:
      # 配置监控统计拦截的filters，去掉后监控界面SQL无法进行统计，’wall’用于防火墙
      filters: stat, wall, log4j, config
      # 初始化大小
      initial-size: 10
      # 最大连接数
      max-active: 100
      # 获取连接等待超时时间
      max-wait: 60000
      # 最小连接数
      min-idle: 1
      # 间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 30000
      # 检测连接是否有效的sql
      validation-query: select 'X'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # PSCache Mysql下建议关闭
      pool-prepared-statements: true
      max-open-prepared-statements: 50
      max-pool-prepared-statement-per-connection-size: 20

  thymeleaf:
    mode: LEGACYHTML5
    cache: false
    suffix: .html
    check-template-location: true
    prefix: classpath:/static/
    encoding: UTF-8
    servlet:
      content-type: text/html

  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

logging:
  level:
    com.sean: debug
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} %clr(-%5p)  %clr(${PID:- }){magenta} --- %clr([%15.15t]){faint} %highlight(%-80.80logger{300}){cyan} %clr(:) %m %n%wEx"


server:
  port: 8090

# 监控模块
#management:
#  # 端点信息接口使用的端口，为了和主系统接口使用的端口进行分离
#  server:
#    port: 8081
#    servlet:
#      context-path: /sys
#  # 端点健康情况，默认值"never"，设置为"always"可以显示硬盘使用情况和线程情况
#  endpoint:
#    health:
#      show-details: always
#  # 设置端点暴露的哪些内容，默认["health","info"]，设置"*"代表暴露所有可访问的端点
#  endpoints:
#    web:
#      exposure:
#        include: '*'